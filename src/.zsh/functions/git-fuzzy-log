#!/usr/bin/env zsh
#shellcheck shell=bash

git rev-parse --is-inside-work-tree >/dev/null 2>&1 || return 1

function pretty_commit_message_prefix {
    sed -E $'
        s/ feat:/ ✨/g;
        s/ fix:/ 🐛/g;
        s/ hotfix:/ 🚧/g;
        s/ refactor:/ ♻️ /g;
        s/ style:/ 🎨/g;
        s/ perf:/ 🐎/g;
        s/ test:/ 🚨/g;
        s/ docs:/ 📚/g;
        s/ chore:/ 🔧/g;
        s/ Merge branch /  \ue0a0 Merge branch /g;
        s/ Merge remote-tracking branch /  \ue0a0 Merge remote-tracking branch /g;
        s/ Merge pull request /  \ue0a0 Merge pull request /g;
    '
}

local _query
local _key
local _item
local _commit

function interaction {
    local _json
    _json=$(
        git log --graph --color "${GIT_BRANCH:---all}" --date-order --decorate --pretty=format:'%C(auto)%h %d %s %C(cyan bold)(%cr)%Creset' -1000 | pretty_commit_message_prefix \
        | fzf \
            --header='enter: diff | C-f: files | C-i: inline select | C-l: reload' \
            --preview=$'
                    local _commit=$(sed -E "s/^[^0-9a-f]+([0-9a-f]*) .*/\\1/" <<<{})
                    [ ! -z "$_commit" ] && {
                        git branch --remotes --contains "$_commit"
                        git show --color=always --date=iso --pretty=fuller "$_commit"
                    } | head -n "$LINES"
                ' \
            --preview-window=border-left \
            --bind=$'ctrl-f:execute(local _commit=$(sed -E "s/^[^0-9a-f]+([0-9a-f]*) .*/\\1/" <<<{}) && [ ! -z "$_commit" ] && git show --color=always --date=iso --pretty=fuller --name-status "$_commit" >/dev/tty)' \
            --bind=$'enter:execute(local _commit=$(sed -E "s/^[^0-9a-f]+([0-9a-f]*) .*/\\1/" <<<{}) && [ ! -z "$_commit" ] && git show --color=always --date=iso --pretty=fuller "$_commit" >/dev/tty)' \
            --query="$_query" \
            --print-query \
            --expect='ctrl-i,ctrl-l' \
        | jq -R . | jq -scr .
    )

    local _length
    {
        IFS= read -r _length
        IFS= read -r _query
        IFS= read -r _key
        IFS= read -r _item
    } < <(jq -cr 'length, .[]' <<<"$_json")

    (( _length == 3 ))
}

while interaction
do
    _commit=$(sed -E "s/^[^0-9a-f]+([0-9a-f]*) .*/\1/" <<<"$_item")

    case "$_key" in
        ctrl-i)
            LBUFFER+=$_commit
            return
            ;;
        ctrl-l)
            continue
            ;;
    esac
done
