#!/usr/bin/env zsh
#shellcheck shell=bash

git rev-parse --is-inside-work-tree >/dev/null 2>&1 || return 1

local _accept=1
local _query
local _key
local _branch
local _location

function interaction {
    local _json
    _json=$(
        git branch --all --color=always | grep --color=yes -vE '(^|/)HEAD' \
        | fzf \
            --height=20 \
            --header='enter: checkout | C-n: create | C-d: delete | C-p: push | C-i: inline select | C-l: reload | C-x: toggle dry-run' \
            --query="$_query" \
            --print-query \
            --expect='enter,ctrl-n,ctrl-d,ctrl-p,ctrl-i,ctrl-l,ctrl-x' \
        | jq -R . | jq -scr .
    )

    local _length
    {
        IFS= read -r _length
        IFS= read -r _query
        IFS= read -r _key
        IFS= read -r _branch
    } < <(jq -cr 'length, .[]' <<<"$_json")

    (( _length == 3 ))
}

while interaction
do
    _branch=${_branch% -> *}
    _branch=${_branch#??}

    if grep -qE "^remotes/" <<<"$_branch"; then
        _location='remote'
        _branch=${_branch#remotes/}
    else
        _location='local'
    fi

    case "$_key:$_location" in
        enter:remote)
            BUFFER=" git checkout --track $_branch"
            ;;
        enter:local)
            BUFFER=" git checkout $_branch"
            ;;
        ctrl-n:*)
            BUFFER=" git checkout -b "
            _accept=0
            ;;
        ctrl-d:remote)
            BUFFER=" git push ${_branch%%/*} :${_branch#*/}"
            ;;
        ctrl-d:local)
            BUFFER=" git branch -D $_branch"
            ;;
        ctrl-p:remote)
            continue
            ;;
        ctrl-p:local)
            BUFFER=" git push -u $(git remote | head -1) $_branch"
            ;;
        ctrl-i:*)
            LBUFFER+=$_branch
            zle reset-prompt
            return
            ;;
        ctrl-l:*)
            continue
            ;;
        ctrl-x:*)
            _accept=$(( 1 - _accept ))
            continue
            ;;
    esac

    zle reset-prompt

    if (( _accept )); then
        zle accept-line
    else
        CURSOR=$#BUFFER
    fi
    return
done

zle reset-prompt
